name: Process New Website Submission

on:
  issues:
    types: [opened, edited]

jobs:
  process-submission:
    runs-on: ubuntu-latest
    if: contains(github.event.issue.labels.*.name, 'website-submission')
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Parse issue and update data
      run: |
        # 安装依赖
        pip install requests
        
        # 创建处理脚本
        cat > process_issue.py << 'EOF'
        import json
        import os
        import re
        
        # 从环境变量获取Issue内容
        issue_body = os.environ['ISSUE_BODY']
        issue_number = os.environ['ISSUE_NUMBER']
        
        # 解析Issue内容
        lines = [line.strip() for line in issue_body.split('\n') if line.strip()]
        
        # 提取信息
        url = lines[0] if len(lines) > 0 else ""
        icon_type = lines[1] if len(lines) > 1 else ""
        icon_value = lines[2] if len(lines) > 2 else ""
        name = lines[3] if len(lines) > 3 else ""
        description = lines[4] if len(lines) > 4 else ""
        category = lines[5] if len(lines) > 5 else ""
        
        # 验证数据
        if not all([url, icon_type, name, description, category]):
            print("错误: Issue格式不正确")
            exit(1)
            
        if icon_type not in ["FA", "UP"]:
            print("错误: 图标类型必须是FA或UP")
            exit(1)
            
        valid_categories = ["插件", "教程", "工具", "资源", "社区"]
        if category not in valid_categories:
            print(f"错误: 分类必须是{valid_categories}中的一个")
            exit(1)
            
        # 创建新的网站条目
        new_site = {
            "name": name,
            "url": url,
            "iconType": icon_type,
            "icon": icon_value if icon_type == "FA" else "fa-external-link-alt",
            "description": description,
            "category": category
        }
        
        # 读取现有的数据
        try:
            with open('websites.json', 'r', encoding='utf-8') as f:
                websites = json.load(f)
        except FileNotFoundError:
            websites = []
            
        # 添加新网站
        websites.append(new_site)
        
        # 保存更新后的数据
        with open('websites.json', 'w', encoding='utf-8') as f:
            json.dump(websites, f, ensure_ascii=False, indent=2)
            
        print("成功处理网站提交")
        EOF
        
        # 运行处理脚本
        python process_issue.py
      env:
        ISSUE_BODY: ${{ github.event.issue.body }}
        ISSUE_NUMBER: ${{ github.event.issue.number }}
        
    - name: Commit and push changes
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git add websites.json
        git commit -m "添加新网站（来自Issue #${{ github.event.issue.number }}）"
        git push
        
    - name: Add comment to issue
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '✅ 您的提交已成功处理！网站已添加到导航中。'
          })
